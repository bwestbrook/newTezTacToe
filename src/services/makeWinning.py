from pprint import pprint
gameWinners = []
count = 0
if True:
    corner = [1, 1, 1]  
    gameWinnerSet = []
    for i in range(1, 5):
        coord = [corner[0] + i, corner[1] + i, corner[2] + i]
        gameWinnerSet.append(coord)
        count += 1
        if count == 4:
            gameWinners.append(gameWinnerSet)
            gameWinnerSet = []
            count = 0
    corner = [1, 1, 4]  
    gameWinnerSet = []
    for i in range(1, 5):
        coord = [corner[0] + i, corner[1] + i, corner[2] - i]
        gameWinnerSet.append(coord)
        count += 1
        if count == 4:
            gameWinners.append(gameWinnerSet)
            gameWinnerSet = []
            count = 0
    corner = [4, 1, 1]  
    gameWinnerSet = []
    for i in range(1, 5):
        coord = [corner[0] - i, corner[1] + i, corner[2] + i]
        gameWinnerSet.append(coord)
        count += 1
        if count == 4:
            gameWinners.append(gameWinnerSet)
            gameWinnerSet = []
            count = 0
    corner = [4, 1, 4]  
    gameWinnerSet = []
    for i in range(1, 5):
        coord = [corner[0] - i, corner[1] + i, corner[2] - i]
        gameWinnerSet.append(coord)
        count += 1
        if count == 4:
            gameWinners.append(gameWinnerSet)
            gameWinnerSet = []
            count = 0
if True:
    for i in range(1, 5):
        gameWinnerSet = []
        for j in range(1, 5):
            coord = [i, j, j]
            gameWinnerSet.append(coord)
            count += 1
            if count == 4:
                gameWinners.append(gameWinnerSet)
                gameWinnerSet = []
                count = 0
    for i in (range(1, 5)):
        gameWinnerSet = []
        for j in reversed(range(1, 5)):
            coord = [i, -j + 1, j]
            gameWinnerSet.append(coord)
            count += 1
            if count == 4:
                gameWinners.append(gameWinnerSet)
                gameWinnerSet = []
                count = 0
    for i in range(1, 5):
        gameWinnerSet = []
        for j in range(1, 5):
            coord = [j, i, j]
            gameWinnerSet.append(coord)
            count += 1
            if count == 4:
                gameWinners.append(gameWinnerSet)
                gameWinnerSet = []
                count = 0
    for i in (range(1, 5)):
        gameWinnerSet = []
        for j in reversed(range(1, 5)):
            coord = [-j + 1, i, j]
            gameWinnerSet.append(coord)
            count += 1
            if count == 4:
                gameWinners.append(gameWinnerSet)
                gameWinnerSet = []
                count = 0
    for i in range(1, 5):
        gameWinnerSet = []
        for j in range(1, 5):
            coord = [j, j, i]
            gameWinnerSet.append(coord)
            count += 1
            if count == 4:
                gameWinners.append(gameWinnerSet)
                gameWinnerSet = []
                count = 0
    count = 0
    for i in (range(1, 5)):
        gameWinnerSet = []
        for j in reversed(range(1, 5)):
            coord = [j, -j + 1, i]
            gameWinnerSet.append(coord)
            count += 1
            if count == 4:
                gameWinners.append(gameWinnerSet)
                gameWinnerSet = []
                count = 0
    count = 0
    for j in range(1, 5):
        gameWinnerSet = []
        for k in range(1, 5):
            for i in range(1, 5):
                coord = [i, j, k]
                gameWinnerSet.append(coord)
                count += 1
                if count == 4:
                    gameWinners.append(gameWinnerSet)
                    gameWinnerSet = []
                    count = 0
    count = 0
    for k in range(1, 5):
        gameWinnerSet = []
        for i in range(1, 5):
            for j in range(1, 5):
                coord = [i, j, k]
                gameWinnerSet.append(coord)
                count += 1
                if count == 4:
                    gameWinners.append(gameWinnerSet)
                    gameWinnerSet = []
                    count = 0
    count = 0
    for i in range(1, 5):
        gameWinnerSet = []
        for j in range(1, 5):
            for k in range(1, 5):
                coord = [i, j, k]
                gameWinnerSet.append(coord)
                count += 1
                if count == 4:
                    gameWinners.append(gameWinnerSet)
                    gameWinnerSet = []
                    count = 0
#pprint(gameWinners)
#print(len(gameWinners))
for gameWinner in gameWinners:
    print(gameWinner)
    winningStr = ''
    for i, coord in enumerate(gameWinner):
        print(i, coord)
        winningStr += str(coord)
    #print(winningStr)



game_winners = {
    0: [111, 112, 113, 114],
    1: [121, 122, 123, 124],
    2: [131, 132, 133, 134],
    3: [141, 142, 143, 144],
    4: [211, 212, 213, 214],
    5: [221, 222, 223, 224],
    6: [231, 232, 233, 234],
    7: [241, 242, 243, 244],
    8: [311, 312, 313, 314],
    9: [321, 322, 323, 324],
    10: [331, 332, 333, 334],
    11: [341, 342, 343, 344],
    12: [411, 412, 413, 414],
    13: [421, 422, 423, 424],
    14: [431, 432, 433, 434],
    15: [441, 442, 443, 444],
    16: [111, 121, 131, 141],
    17: [211, 221, 231, 241],
    18: [311, 321, 331, 341],
    19: [411, 421, 431, 441],
    20: [112, 122, 132, 142],
    21: [212, 222, 232, 242],
    22: [312, 322, 332, 342],
    23: [412, 422, 432, 442],
    24: [113, 123, 133, 143],
    25: [213, 223, 233, 243],
    26: [313, 323, 333, 343],
    27: [413, 423, 433, 443],
    28: [114, 124, 134, 144],
    29: [214, 224, 234, 244],
    30: [314, 324, 334, 344],
    31: [414, 424, 434, 444],
    32: [111, 211, 311, 411],
    33: [112, 212, 312, 412],
    34: [113, 213, 313, 413],
    35: [114, 214, 314, 414],
    36: [121, 221, 321, 421],
    37: [122, 222, 322, 422],
    38: [123, 223, 323, 423],
    39: [124, 224, 324, 424],
    40: [131, 231, 331, 431],
    41: [132, 232, 332, 432],
    42: [133, 233, 333, 433],
    43: [134, 234, 334, 434],
    44: [141, 241, 341, 441],
    45: [142, 242, 342, 442],
    46: [143, 243, 343, 443],
    47: [144, 244, 344, 444],
    48: [111, 122, 133, 144],
    49: [114, 123, 132, 141],
    50: [211, 222, 233, 244],
    51: [214, 223, 232, 241],
    52: [311, 322, 333, 344],
    53: [314, 323, 332, 341],
    54: [411, 422, 433, 444],
    55: [414, 423, 432, 441],
    56: [111, 212, 313, 414],
    57: [114, 213, 312, 411],
    58: [121, 222, 323, 424],
    59: [124, 223, 322, 421],
    60: [131, 232, 333, 434],
    61: [134, 233, 332, 431],
    62: [141, 242, 343, 444],
    63: [144, 243, 342, 441],
    64: [111, 221, 331, 441],
    65: [141, 231, 321, 411],
    66: [112, 222, 332, 442],
    67: [142, 232, 322, 412],
    68: [113, 223, 333, 443],
    69: [143, 233, 323, 413],
    70: [114, 224, 334, 444],
    71: [144, 234, 324, 414],
    72: [111, 222, 333, 444],
    73: [414, 323, 232, 141],
    74: [441, 332, 223, 114]
}


idLookUp = {
    
      1: '60199',
      2: '60200',
      3: '60201',
      4: '60202',
      5: '60203',
      6: '60204',
      7: '60206',
      8: '60207',
      9: '60208',
      10: '60209',
      11: '60210',
      12: '60211',
      13: '60212',
      14: '60213',
      15: '60215',
      16: '60216',
      17: '60218',
      18: '60219',
      19: '60220',
      20: '60221',
      21: '60224',
      22: '60225',
      23: '60226',
      24: '60227',
      25: '60228',
      26: '60230',
      27: '60231',
      28: '60233',
      29: '60234',
      30: '60235',
      31: '60236',
      32: '60237',
      33: '60238',
      34: '60239',
      35: '60240',
      36: '60241',
      37: '60242',
      38: '60243',
      39: '60244',
      40: '60245',
      41: '60246',
      42: '60247',
      43: '60248',
      44: '60249',
      45: '60250',
      46: '60251',
      47: '60252',
      48: '60253',
      49: '60254',
      50: '60255',
      51: '60256',
      52: '60257',
      53: '60258',
      54: '60259',
      55: '60260',
      56: '60338',
      57: '60339',
      58: '60340',
      59: '60344',
      60: '60346',
      61: '60348',
      62: '60349',
      63: '60350',
      64: '60354',
      65: '60355',
      66: '60356',
      67: '60357',
      68: '60358',
      69: '60359',
      70: '60361',
      71: '60362',
      72: '60363',
      73: '60366',
      74: '60367',
      75: '60368',
      76: '60369',
      77: '60370',
      78: '60371',
      79: '60372',
      80: '60373',
      81: '60374',
      82: '60375',
      83: '60377',
      84: '60379',
      85: '60380',
      86: '60381',
      87: '60382',
      88: '60383',
      89: '60384',
      90: '60386',
      91: '60387',
      92: '60388',
      93: '60389',
      94: '60391',
      95: '60392',
      96: '60393',
      97: '60394',
      98: '60395',
      99: '60396',
      100: '60397',
      101: '60399',
      102: '60401',
      103: '60403',
      104: '60404',
      105: '60406',
      106: '60407',
      107: '60413',
      108: '60414',
      109: '60416',
      110: '60418',
      111: '60429',
      112: '60432',
      113: '60433',
      114: '60434',
      115: '60436',
      116: '60437',
      117: '60438',
      118: '60439',
      119: '60440',
      120: '60441',
      121: '60442',
      122: '60443',
      123: '60444',
      124: '60445',
      125: '60446',
      126: '60447',
      127: '60448',
      128: '60449',
      129: '60450',
      130: '60451',
      131: '60452',
      132: '60453',
      133: '60454',
      134: '60455',
      135: '60456',
      136: '60457',
      137: '60458',
      138: '60459',
      139: '60460',
      140: '60461',
      141: '60462',
      142: '60463',
      143: '60464',
      144: '60465',
      145: '60466',
      146: '60467',
      147: '60468',
      148: '60469',
      149: '60470',
      150: '60471',
      151: '60472',
      152: '60473',
      153: '60474',
      154: '60475',
      155: '60476',
      156: '60477',
      157: '60478',
      158: '60479',
      159: '60480',
      160: '60481',
      161: '60483',
      162: '60486',
      163: '60487',
      164: '60489',
      165: '60491',
      166: '60492',
      167: '60493',
      168: '60494',
      169: '60495',
      170: '60496',
      171: '60497',
      172: '60498',
      173: '60499',
      174: '60500',
      175: '60501',
      176: '60502',
      177: '60534',
      178: '60535',
      179: '60536',
      180: '60537',
      181: '60545',
      182: '60547',
      183: '60546',
      184: '60548',
      185: '60549',
      186: '60550',
      187: '60551',
      188: '60552',
      189: '60553',
      190: '60554',
      191: '60560',
      192: '60561',
      193: '60562',
      194: '60563',
      195: '60564',
      196: '60565',
      197: '60566',
      198: '60567',
      199: '60571',
      200: '60572',
      201: '60573',
      202: '60575',
      203: '60576',
      204: '60577',
      205: '60578',
      206: '60580',
      207: '60581',
      208: '60582',
      209: '60583',
      210: '60584',
      211: '60585',
      212: '60586',
      213: '60587',
      214: '60589',
      215: '60590',
      216: '60593',
      217: '60595',
      218: '60596',
      219: '60597',
      220: '60599',
      221: '60600',
      222: '60601',
      223: '60603',
      224: '60605',
      225: '60606',
      226: '60607',
      227: '60608',
      228: '60612',
      229: '60613',
      230: '60614',
      231: '60615',
      232: '60616',
      233: '60617',
      234: '60618',
      235: '60619',
      236: '60620',
      237: '60621',
      238: '60622',
      239: '60623',
      240: '60624',
      241: '60625',
      242: '60626',
      243: '60627',
      244: '60628',
      245: '60629',
      246: '60630',
      247: '60631',
      248: '60632',
      249: '60633',
      251: '60636',
      252: '60637',
      253: '60638',
      254: '60639',
      255: '60640',
      256: '60641',
      257: '60642',
      258: '60643',
      259: '60644',
      260: '60645',
      261: '60646',
      262: '60647',
      263: '60648',
      264: '60649',
      265: '60650',
      266: '60651',
      267: '60688',
      268: '60690',
      269: '60692',
      270: '60693',
      271: '60694',
      272: '60696'
    }


for id, kalaId in idLookUp.items():
    print(int(kalaId), ': new_data,')